import * as dynamoose from 'dynamoose';
import { nanoid } from 'nanoid';

export interface SubcriptionTable {
  /**
   * id generated by the server
   */
  id: string;

  /**
   * *REQUIRED*
   * sell whether the product is available for purchase
   */
  activation: boolean;

  /**
   * *REQUIRED*
   * an amount payable once a year.
   */
  yearlyPrice: number;

  /**
   * *REQUIRED*
   * an amount payable once a month.
   */
  monthlyPrice: number;

  /**
   * *REQUIRED*
   * The name of the product you purchased.
   */
  planName: number;

  /**
   * *REQUIRED*
   * Unique value(id) generated by stripe when a new product is released.
   */
  stripeId: string;
}

export interface PaymentTable {
  /**
   * id generated by the server
   */
  id: string;

  /**
   * *REQUIRED*
   * Unique value of the product.
   * The id value that is automatically generated when new.
   */
  subscriptionId: boolean;

  /**
   * *REQUIRED*
   * Account's unique ID value
   * The id value that is automatically generated when new. ( Account Service )
   */
  accountId: number;

  /**
   * *REQUIRED*
   * Invoice ID generated automatically by Stripe
   * ( The value that occurs when a payment is attempted, regardless of whether the payment was successful or not. )
   */
  invoiceId: number;
}

const SubcriptionSchema = new dynamoose.Schema({
  id: {
    type: String,
    default: () => nanoid(),
  },
  activation: {
    type: Boolean,
    required: true,
  },
  yearlyPrice: {
    type: Number,
    required: true,
  },
  monthlyPrice: {
    type: Number,
    required: true,
  },
  planName: {
    type: String,
    required: true,
  },
  stripeId: {
    type: String,
    required: true,
  },
});

const TBL_SUBSCRIPTION = process.env.DYNAMODB_TABLE_SUBSCRIPTION;
export const SuscriptionModel = dynamoose.model(
  TBL_SUBSCRIPTION,
  SubcriptionSchema,
);

const PaymentSchema = new dynamoose.Schema({
  id: {
    type: String,
    default: () => nanoid(),
  },
  subscriptionId: {
    type: String,
    required: true,
  },
  accountId: {
    type: String,
    required: true,
  },
  invoiceId: {
    type: String,
    required: true,
  },
});

const TBL_PAYMENT = process.env.DYNAMODB_TABLE_PAYMENT;
export const PaymentModel = dynamoose.model(TBL_PAYMENT, PaymentSchema);
